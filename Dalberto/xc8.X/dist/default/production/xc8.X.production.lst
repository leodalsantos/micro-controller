

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Mon May 27 10:58:45 2019

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
     9                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    10  0000                     
    11                           ; Version 1.41
    12                           ; Generated 25/01/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC18F4520 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     _LATA	set	3977
    46  0000                     _TRISA	set	3986
    47  0000                     _LATD	set	3980
    48  0000                     _TRISD	set	3989
    49                           
    50                           ; #config settings
    51  0000                     
    52                           	psect	cinit
    53  007F50                     __pcinit:
    54                           	opt stack 0
    55  007F50                     start_initialization:
    56                           	opt stack 0
    57  007F50                     __initialization:
    58                           	opt stack 0
    59  007F50                     end_of_initialization:
    60                           	opt stack 0
    61  007F50                     __end_of__initialization:
    62                           	opt stack 0
    63  007F50  0100               	movlb	0
    64  007F52  EFAB  F03F         	goto	_main	;jump to C main() function
    65                           
    66                           	psect	cstackCOMRAM
    67  000001                     __pcstackCOMRAM:
    68                           	opt stack 0
    69  000001                     ??_main:
    70  000001                     
    71                           ; 2 bytes @ 0x0
    72  000001                     	ds	2
    73                           
    74 ;;
    75 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    76 ;;
    77 ;; *************** function _main *****************
    78 ;; Defined at:
    79 ;;		line 10 in file "xc8exemplo.c"
    80 ;; Parameters:    Size  Location     Type
    81 ;;		None
    82 ;; Auto vars:     Size  Location     Type
    83 ;;		None
    84 ;; Return value:  Size  Location     Type
    85 ;;                  2   12[None  ] int 
    86 ;; Registers used:
    87 ;;		wreg, status,2
    88 ;; Tracked objects:
    89 ;;		On entry : 0/0
    90 ;;		On exit  : 0/0
    91 ;;		Unchanged: 0/0
    92 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
    93 ;;      Params:         0       0       0       0       0       0       0
    94 ;;      Locals:         0       0       0       0       0       0       0
    95 ;;      Temps:          2       0       0       0       0       0       0
    96 ;;      Totals:         2       0       0       0       0       0       0
    97 ;;Total ram usage:        2 bytes
    98 ;; This function calls:
    99 ;;		Nothing
   100 ;; This function is called by:
   101 ;;		Startup code after reset
   102 ;; This function uses a non-reentrant model
   103 ;;
   104                           
   105                           	psect	text0
   106  007F56                     __ptext0:
   107                           	opt stack 0
   108  007F56                     _main:
   109                           	opt stack 31
   110                           
   111                           ;xc8exemplo.c: 12: TRISD = 0;
   112                           
   113                           ;incstack = 0
   114  007F56  0E00               	movlw	0
   115  007F58  6E95               	movwf	3989,c	;volatile
   116                           
   117                           ;xc8exemplo.c: 13: LATD = 0;
   118  007F5A  0E00               	movlw	0
   119  007F5C  6E8C               	movwf	3980,c	;volatile
   120                           
   121                           ;xc8exemplo.c: 14: TRISA = 0xC3;
   122  007F5E  0EC3               	movlw	195
   123  007F60  6E92               	movwf	3986,c	;volatile
   124                           
   125                           ;xc8exemplo.c: 15: LATA = 0x04;
   126  007F62  0E04               	movlw	4
   127  007F64  6E89               	movwf	3977,c	;volatile
   128                           
   129                           ;xc8exemplo.c: 16: _delay((unsigned long)((1000)*(8000000/4000.0)));
   130  007F66  0E0B               	movlw	11
   131  007F68  6E02               	movwf	(??_main+1)& (0+255),c
   132  007F6A  0E26               	movlw	38
   133  007F6C  6E01               	movwf	??_main& (0+255),c
   134  007F6E  0E5E               	movlw	94
   135  007F70                     u17:
   136  007F70  2EE8               	decfsz	wreg,f,c
   137  007F72  D7FE               	bra	u17
   138  007F74  2E01               	decfsz	??_main& (0+255),f,c
   139  007F76  D7FC               	bra	u17
   140  007F78  2E02               	decfsz	(??_main+1)& (0+255),f,c
   141  007F7A  D7FA               	bra	u17
   142  007F7C                     l618:
   143                           
   144                           ;xc8exemplo.c: 20: {
   145                           ;xc8exemplo.c: 21: LATD = 0x6F;
   146  007F7C  0E6F               	movlw	111
   147  007F7E  6E8C               	movwf	3980,c	;volatile
   148                           
   149                           ;xc8exemplo.c: 22: _delay((unsigned long)((500)*(8000000/4000.0)));
   150  007F80  0E06               	movlw	6
   151  007F82  6E02               	movwf	(??_main+1)& (0+255),c
   152  007F84  0E13               	movlw	19
   153  007F86  6E01               	movwf	??_main& (0+255),c
   154  007F88  0EAE               	movlw	174
   155  007F8A                     u27:
   156  007F8A  2EE8               	decfsz	wreg,f,c
   157  007F8C  D7FE               	bra	u27
   158  007F8E  2E01               	decfsz	??_main& (0+255),f,c
   159  007F90  D7FC               	bra	u27
   160  007F92  2E02               	decfsz	(??_main+1)& (0+255),f,c
   161  007F94  D7FA               	bra	u27
   162                           
   163                           ;xc8exemplo.c: 23: LATD = 0x7F;
   164  007F96  0E7F               	movlw	127
   165  007F98  6E8C               	movwf	3980,c	;volatile
   166                           
   167                           ;xc8exemplo.c: 24: _delay((unsigned long)((500)*(8000000/4000.0)));
   168  007F9A  0E06               	movlw	6
   169  007F9C  6E02               	movwf	(??_main+1)& (0+255),c
   170  007F9E  0E13               	movlw	19
   171  007FA0  6E01               	movwf	??_main& (0+255),c
   172  007FA2  0EAE               	movlw	174
   173  007FA4                     u37:
   174  007FA4  2EE8               	decfsz	wreg,f,c
   175  007FA6  D7FE               	bra	u37
   176  007FA8  2E01               	decfsz	??_main& (0+255),f,c
   177  007FAA  D7FC               	bra	u37
   178  007FAC  2E02               	decfsz	(??_main+1)& (0+255),f,c
   179  007FAE  D7FA               	bra	u37
   180                           
   181                           ;xc8exemplo.c: 25: LATD = 0x6F;
   182  007FB0  0E6F               	movlw	111
   183  007FB2  6E8C               	movwf	3980,c	;volatile
   184                           
   185                           ;xc8exemplo.c: 26: _delay((unsigned long)((500)*(8000000/4000.0)));
   186  007FB4  0E06               	movlw	6
   187  007FB6  6E02               	movwf	(??_main+1)& (0+255),c
   188  007FB8  0E13               	movlw	19
   189  007FBA  6E01               	movwf	??_main& (0+255),c
   190  007FBC  0EAE               	movlw	174
   191  007FBE                     u47:
   192  007FBE  2EE8               	decfsz	wreg,f,c
   193  007FC0  D7FE               	bra	u47
   194  007FC2  2E01               	decfsz	??_main& (0+255),f,c
   195  007FC4  D7FC               	bra	u47
   196  007FC6  2E02               	decfsz	(??_main+1)& (0+255),f,c
   197  007FC8  D7FA               	bra	u47
   198                           
   199                           ;xc8exemplo.c: 27: LATD = 0x06;
   200  007FCA  0E06               	movlw	6
   201  007FCC  6E8C               	movwf	3980,c	;volatile
   202                           
   203                           ;xc8exemplo.c: 28: _delay((unsigned long)((500)*(8000000/4000.0)));
   204  007FCE  0E06               	movlw	6
   205  007FD0  6E02               	movwf	(??_main+1)& (0+255),c
   206  007FD2  0E13               	movlw	19
   207  007FD4  6E01               	movwf	??_main& (0+255),c
   208  007FD6  0EAE               	movlw	174
   209  007FD8                     u57:
   210  007FD8  2EE8               	decfsz	wreg,f,c
   211  007FDA  D7FE               	bra	u57
   212  007FDC  2E01               	decfsz	??_main& (0+255),f,c
   213  007FDE  D7FC               	bra	u57
   214  007FE0  2E02               	decfsz	(??_main+1)& (0+255),f,c
   215  007FE2  D7FA               	bra	u57
   216                           
   217                           ;xc8exemplo.c: 29: LATD = 0x7F;
   218  007FE4  0E7F               	movlw	127
   219  007FE6  6E8C               	movwf	3980,c	;volatile
   220                           
   221                           ;xc8exemplo.c: 30: _delay((unsigned long)((500)*(8000000/4000.0)));
   222  007FE8  0E06               	movlw	6
   223  007FEA  6E02               	movwf	(??_main+1)& (0+255),c
   224  007FEC  0E13               	movlw	19
   225  007FEE  6E01               	movwf	??_main& (0+255),c
   226  007FF0  0EAE               	movlw	174
   227  007FF2                     u67:
   228  007FF2  2EE8               	decfsz	wreg,f,c
   229  007FF4  D7FE               	bra	u67
   230  007FF6  2E01               	decfsz	??_main& (0+255),f,c
   231  007FF8  D7FC               	bra	u67
   232  007FFA  2E02               	decfsz	(??_main+1)& (0+255),f,c
   233  007FFC  D7FA               	bra	u67
   234  007FFE  D7BE               	goto	l618
   235  008000                     __end_of_main:
   236                           	opt stack 0
   237  0000                     wreg	equ	0xFE8
   238                           wreg	equ	0xFE8
   239                           
   240                           	psect	rparam
   241  0000                     wreg	equ	0xFE8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127      2       2
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      2       2       1        1.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BANK5              100      0       0      14        0.0%
ABS                  0      0       0      15        0.0%
BITBANK5           100      0       0      16        0.0%
BIGRAM             5FF      0       0      17        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Mon May 27 10:58:45 2019

                     u17 7F70                       u27 7F8A                       u37 7FA4  
                     u47 7FBE                       u57 7FD8                       u67 7FF2  
                    l618 7F7C                      wreg 000FE8             __CFG_LVP$OFF 000000  
           __CFG_WDT$OFF 000000                     _LATA 000F89                     _LATD 000F8C  
           __CFG_PWRT$ON 000000                     _main 7F56                     start 0000  
           ___param_bank 000000                    ?_main 0001                    _TRISA 000F92  
                  _TRISD 000F95           __CFG_MCLRE$OFF 000000          __initialization 7F50  
           __end_of_main 8000                   ??_main 0001            __activetblptr 000000  
             __accesstop 0080  __end_of__initialization 7F50            ___rparam_used 000001  
         __pcstackCOMRAM 0001                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F50                  __ramtop 0600                  __ptext0 7F56  
   end_of_initialization 7F50      start_initialization 7F50         __CFG_OSC$INTIO67 000000  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 00AA  
